[gd_scene load_steps=4 format=2]

[ext_resource path="res://imgs/White_sheet.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


enum {DAMAGE_1=1, DAMAGE_2=2, HEAL=3, GATTLING=4, ARROW=5, BOMB=6}
var WindowSizes=OS.get_real_window_size() #if needed


const MAXTHROWS = 4
var nbr_throws = 0
var RollDiceButton # Button to be clicked to roll the dices
var EndTurnButton # Button to be clicked to end the turn
var RollingBool = false # Boolean to verify the Dices are rolling
var label_login_name
var Information_Label # label that informs the player about the actual state
# of his turn

#install Timer for the dice switch
var RollTimer

var button_on_off = 0
#0 = on, can throw dices
#1 = off, cannot throw dices


# image variables loaded so that we don´t need reload everytime
var DMG1_IMG = load(\"res://imgs/DMG1.png\")
var DMG2_IMG = load(\"res://imgs/DMG2.png\")
var HEAL_IMG = load(\"res://imgs/Biere.png\")
var GATTLING_IMG = load(\"res://imgs/Gattline.png\")
var ARROW_IMG = load(\"res://imgs/fleche.png\")
var BOMB_IMG = load(\"res://imgs/Dynamite.png\")

#Booleans to check if a Button was clicked
var Dice1Clicked = false
var Dice2Clicked = false
var Dice3Clicked = false
var Dice4Clicked = false
var Dice5Clicked = false

#The respective buttons for the Dices to be selected
var button1 
var button2 
var button3 
var button4 
var button5 

# When the program is launched the Dices and DiceTab is initialized
onready var Dice_container=init_dice_tab()
onready var Dice1 = Dice_container.get_child(0).get_child(1)
onready var Dice2 = Dice_container.get_child(1).get_child(1)
onready var Dice3 = Dice_container.get_child(2).get_child(1)
onready var Dice4 = Dice_container.get_child(3).get_child(1)
onready var Dice5 = Dice_container.get_child(4).get_child(1)


func _set_disabled():
	$Button.disabled = true
	$Button.modulate = Color(0.5,0.5,0.5,1)
	$Button/sprite_itemIcon.modulate = Color(0.25,0.25,0.25)

func print_label():
	label_login_name = Label.new()
	label_login_name.set_name(\"label_login_name\")
	label_login_name.text = global.login_name
	label_login_name.set_position(Vector2(500, 230))
	self.add_child(label_login_name)

#Initialize de RollDiceButton and EndTurnButton
#Return: None
func init_RollDicebutton_and_EndTurnButton():
	
	#Initialisation of The Buttons
	RollDiceButton = Button.new()
	RollDiceButton.set_name(\"RollDiceButton\")
#	RollDiceButton.text = \"Roll the Dices\"
	RollDiceButton.set_position(Vector2(733,356))
	RollDiceButton.set_size(Vector2(88,50))
	RollDiceButton.disabled = false
	button_on_off = 0
	
	EndTurnButton= Button.new()
	EndTurnButton.set_name(\"EndTurnButton\")
#	EndTurnButton.text = \"Activate effects\"
	EndTurnButton.set_position(Vector2(488,356))
	EndTurnButton.set_size(Vector2(88,50))
	
	RollDiceButton.text = \"Roll the Dice\"
	EndTurnButton.text = \"Activate Effects\"
		
	#Connect them to a function if they are clicked
	RollDiceButton.connect(\"pressed\", self, \"RollDiceButton_clicked\")
	EndTurnButton.connect(\"pressed\", self, \"EndTurnButton_clicked\")
	#Add the buttons as children of the body
	self.add_child(RollDiceButton)
	self.add_child(EndTurnButton)
	EndTurnButton.disabled=true
	


var dico_dice_for_server={}
#Function called when the RollDiceButton is clicked
#Return: None


func RollDiceButton_clicked():
	global.first_turn=false
	if ((Dice1Clicked!=false or Dice2Clicked!=false or Dice3Clicked!=false or Dice4Clicked!=false or Dice5Clicked!=false) and nbr_throws>0) or nbr_throws==0 :
		hide_buttons()
		EndTurnButton.disabled=false
		if button_on_off == 0:
			RollDiceButton.disabled = true
			button_on_off = 1
			nbr_throws+=1
			if nbr_throws < MAXTHROWS or (global.throwsleft==\"1\" and global.dico_char[str(global.current_player)]==\"lucky duke\" ):
				RollingBool=true
				
				#send dico_dice_for_serve (list of array) to the server (TODO)
				if(nbr_throws==1):#everybody is thrown send yes to all dices
					print(\"Rolling,0:YES,1:YES,2:YES,3:YES,4:YES\")
					global.send(\"Rolling,0:YES,1:YES,2:YES,3:YES,4:YES\") # send string to server (TODO)
					
				else:
					#selected dices are YES and not are NO
					var dices_to_roll=\"\"
					for keys in dico_dice_for_server:
						dices_to_roll=dices_to_roll +\",\"+str(dico_dice_for_server[keys])
					print(\"Rolling\"+dices_to_roll)
					global.send(\"Rolling\"+dices_to_roll) #send string to server 
				
				
				#reinit the dices that needs to be selected
				dico_dice_for_server[0]=str(0)+\":NO\"
				dico_dice_for_server[1]=str(1)+\":NO\"
				dico_dice_for_server[2]=str(2)+\":NO\"
				dico_dice_for_server[3]=str(3)+\":NO\"
				dico_dice_for_server[4]=str(4)+\":NO\"
				#Making the timer to stop the rolling of the Dices
				RollTimer.connect(\"timeout\",self,\"on_RollTimer_Timeout\", [], CONNECT_ONESHOT)
				RollTimer.start()
				RollTimer.set_wait_time(2)
			else:
				#RollDiceButton.disabled = true
				print(\"You can´t throw anymore\")
	#Information_Label.text= str(MAXTHROWS-1-nbr_throws)+\" THROWS LEFT\"
	#Information_Label.text= str(global.throwsleft)+\" THROWS LEFT\"
	
#Function called by the Rolltimer so that the Rolling of the Dices ends
#signal server_Dice_values_put(msg_server)


func on_RollTimer_Timeout():
	if nbr_throws != MAXTHROWS-1 or (global.throwsleft==\"1\" and global.dico_char[str(global.current_player)]==\"lucky duke\" ):
		button_on_off = 0
		RollDiceButton.disabled = false
	RollTimer.stop()
	RollingBool=false
	
	Dice1Clicked=false
	Dice2Clicked=false
	Dice3Clicked=false
	Dice4Clicked=false
	Dice5Clicked=false
	dice1_is_selected=0
	dice2_is_selected=0
	dice3_is_selected=0
	dice4_is_selected=0
	dice5_is_selected=0
	#obtenir le string pour avoir les valeurs des dés PAR LE SERVEUR (TODO) 
	print(\"Les dés recoivent leurs valeurs du serveur\")
	set_server_Dice_img(Dice1,global.dice_array_img_for_rolldice_after_timeout['dice']['0'])
	set_server_Dice_img(Dice2,global.dice_array_img_for_rolldice_after_timeout['dice']['1'])
	set_server_Dice_img(Dice3,global.dice_array_img_for_rolldice_after_timeout['dice']['2'])
	set_server_Dice_img(Dice4,global.dice_array_img_for_rolldice_after_timeout['dice']['3'])
	set_server_Dice_img(Dice5,global.dice_array_img_for_rolldice_after_timeout['dice']['4'])
	
	#for i in global.dice_array_img_for_rolldice_after_timeout:
	#	if i == 'D':
	#		count_dyna+=1
	#if count_dyna >=3:
	#	hide_buttons()
		
	#else :
	show_buttons()
	
	
	if nbr_throws == MAXTHROWS-1 and not (global.throwsleft==\"1\" and global.dico_char[str(global.current_player)]==\"lucky duke\" ) :
		hide_buttons()
	
	if (global.throwsleft==\"0\" and global.dico_char[str(global.current_player)]==\"lucky duke\" ) :
		hide_buttons()
		RollDiceButton.disabled=true

func set_server_Dice_img(Dice,value):
	
	if value == '1':
		Dice.texture=DMG1_IMG
	if value == '2':
		Dice.texture=DMG2_IMG
	if value == 'b':
		Dice.texture=HEAL_IMG
	if value == 'g':
		Dice.texture=GATTLING_IMG
	if value == 'd':
		Dice.texture=BOMB_IMG
	if value == 'a':
		Dice.texture=ARROW_IMG
	pass

	
func img_recognition_for__string_array(Dice):
	if Dice.texture == DMG1_IMG: # Damage 1
		return \"1\"		
	elif Dice.texture == DMG2_IMG: #Damage 2
		return \"2\"
	elif Dice.texture == HEAL_IMG:# Heal
		return \"B\"
	elif Dice.texture == GATTLING_IMG:# Gattling
		return \"G\"
	elif Dice.texture == ARROW_IMG:# Arrow
		return \"A\"
	elif Dice.texture == BOMB_IMG:# DYNAMITE
		return \"D\"

	pass
	

#Function called when the EndTurnButton is clicked (TODO) initalized all values and switches player
#Return: None

signal ACTIVATE_EFFECT_SIGNAL

func EndTurnButton_clicked():	
	
	var dico=\"Dice,\"+\"0:\"+img_recognition_for__string_array(Dice1) +\",1:\"+img_recognition_for__string_array(Dice2)+\",2:\"+img_recognition_for__string_array(Dice3)+\",3:\"+img_recognition_for__string_array(Dice4)+\",4:\"+img_recognition_for__string_array(Dice5)
	global.dico_dice_effects[0]=img_recognition_for__string_array(Dice1)
	global.dico_dice_effects[1]=img_recognition_for__string_array(Dice2)
	global.dico_dice_effects[2]=img_recognition_for__string_array(Dice3)
	global.dico_dice_effects[3]=img_recognition_for__string_array(Dice4)
	global.dico_dice_effects[4]=img_recognition_for__string_array(Dice5)
	# we send this array to the server to activate the dices one by one(TODO)
	print(\"the player activating the dices ONE BY ONE .\")
	print(dico)
	EndTurnButton.disabled=true
	emit_signal(\"ACTIVATE_EFFECT_SIGNAL\")
	hide_buttons()
	
func init_everything():
	hide_buttons()
	button_on_off = 0
	RollDiceButton.disabled = false
	RollingBool = false
	nbr_throws=0
	Dice1Clicked = false
	Dice2Clicked = false	
	Dice3Clicked = false
	Dice4Clicked = false
	Dice5Clicked = false
	Dice1.texture = DMG1_IMG
	Dice2.texture = DMG1_IMG
	Dice3.texture = DMG1_IMG
	Dice4.texture = DMG1_IMG
	Dice5.texture = DMG1_IMG
	Information_Label.text = str(MAXTHROWS-1-nbr_throws)+\" THROWS LEFT\"
	
#Initialisation of the dice
#Return: Dice container
func init_dice_tab():
	
	#initialization of the Container of the dices
	var HsplitContainer = HSplitContainer.new()
	self.add_child(HsplitContainer)
	
	#Variables
	var AreaDice # area to make it possible to click the dice
	var DiceBackground # White background
	var DiceValImg # img of the dice
	var CollisionshapeDice # shape to be click the dice
	var k # variable to make a selection of 1 to 6 rather than 0 to 5
	
	#set space position of HsplitContainer
	HsplitContainer.set_position(Vector2(450,314))
	HsplitContainer.set_size(Vector2(482,64))

	#Loop to create the dices, children of HsplitContainer
	for i in range(0,5):
		k=i+1
		
		#create area
		AreaDice = Area2D.new()
		AreaDice.set_name(\"DiceArea2D_\"+str(k))
		
		#create the sprite 'dice background'
		DiceBackground = Sprite.new()
		DiceBackground.set_name(\"DiceBackground_\"+str(k))
		DiceBackground.texture= load(\"res://imgs/des.png\")
		DiceBackground.scale.x=0.35
		DiceBackground.scale.y=0.35
		
		
		
		#add the sprite 'value of the dice'
		DiceValImg = Sprite.new()
		DiceValImg.set_name(\"DiceVal_\"+str(k))
		DiceValImg.texture=load(\"res://imgs/DMG1.png\")
		DiceValImg.scale.x=0.13
		DiceValImg.scale.y=0.13
		
		#add Collisionshape to the Dice (so that we can touch it)
		CollisionshapeDice = CollisionShape2D.new()
		CollisionshapeDice.set_name(\"CollisionshapeDice_\"+str(k))
		CollisionshapeDice.scale.x=0.13
		CollisionshapeDice.scale.y=0.13	
		
		#add children to this area (the order has to be respected)
		
		HsplitContainer.add_child(AreaDice)
		AreaDice.add_child(DiceBackground)
		AreaDice.add_child(DiceValImg)
		AreaDice.add_child(CollisionshapeDice)
		
		AreaDice.position += Vector2(k*70 ,0)
	
	return HsplitContainer


var dice1_is_selected=0
var dice2_is_selected=0
var dice3_is_selected=0
var dice4_is_selected=0
var dice5_is_selected=0


# to add a dic to send to the server
func on_dice_click_event(Dice):
	var key
	if RollingBool== false:
		if Dice.name == Dice1.name:
			if(dice1_is_selected==0):
				Dice1Clicked=true
				button1.text=\"unclick\"
				dice1_is_selected=1
				dico_dice_for_server[0]=str(0)+\":YES\"				
			else:
				Dice1Clicked=false
				button1.text=\"select\"
				dice1_is_selected=0
				dico_dice_for_server[0]=str(0)+\":NO\"
		
		if Dice.name == Dice2.name:
			if(dice2_is_selected==0):
				Dice2Clicked=true
				button2.text=\"unclick\"
				dice2_is_selected=1
				dico_dice_for_server[1]=str(1)+\":YES\"
			else:
				Dice2Clicked=false
				button2.text=\"select\"
				dice2_is_selected=0
				dico_dice_for_server[1]=str(1)+\":NO\"
		
		if Dice.name == Dice3.name:
			if(dice3_is_selected==0):
				Dice3Clicked=true
				button3.text=\"unclick\"
				dice3_is_selected=1
				dico_dice_for_server[2]=str(2)+\":YES\"
				
			else:
				Dice3Clicked=false
				button3.text=\"select\"
				dice3_is_selected=0
				dico_dice_for_server[2]=str(2)+\":NO\"
		
		if Dice.name == Dice4.name:
			if(dice4_is_selected==0):
				Dice4Clicked=true
				button4.text=\"unclick\"
				dice4_is_selected=1
				dico_dice_for_server[3]=str(3)+\":YES\"
			else:
				Dice4Clicked=false
				button4.text=\"select\"
				dice4_is_selected=0
				dico_dice_for_server[3]=str(3)+\":NO\"
				
		if Dice.name == Dice5.name:
			if(dice5_is_selected==0):
				Dice5Clicked=true
				button5.text=\"unclick\"
				dice5_is_selected=1
				dico_dice_for_server[4]=str(4)+\":YES\"
			else:
				Dice5Clicked=false
				button5.text=\"select\"
				dice5_is_selected=0
				dico_dice_for_server[4]=str(4)+\":NO\"
		
		print(Dice.get_parent().get_child(0).name + \" was clicked\")
	else:
		print(\"wait before the dices finished rolling\")

#Hide the select buttons of every Dice
func hide_buttons():
	button1.visible = false
	button2.visible = false
	button3.visible = false
	button4.visible = false
	button5.visible = false
	
#Show the select buttons of every Dice
func show_buttons():
	if Dice1.texture != BOMB_IMG:
		button1.visible=true
		button1.text=\"select\"
	if Dice2.texture != BOMB_IMG:
		button2.visible=true
		button2.text=\"select\"
	if Dice3.texture != BOMB_IMG:
		button3.visible=true
		button3.text=\"select\"
	if Dice4.texture != BOMB_IMG:	
		button4.visible=true
		button4.text=\"select\"
	if Dice5.texture != BOMB_IMG:
		button5.visible=true
		button5.text=\"select\"


# Makes the Image of the dice switch randomly (graphical) and stops at the core 
# value of the Dice (core)
#Return: None

func change_img(Dice):
	var NewValueOfDice
	NewValueOfDice=floor(rand_range(1,7))	
	#select the respective image depending on the value
	if NewValueOfDice == DAMAGE_1: # Damage 1
		Dice.texture = DMG1_IMG
		global.dice_val_general = DAMAGE_1
		
	elif NewValueOfDice == DAMAGE_2: #Damage 2
		Dice.texture = DMG2_IMG
		global.dice_val_general = DAMAGE_2
		
	elif NewValueOfDice == HEAL:# Heal
		Dice.texture = HEAL_IMG
		global.dice_val_general = HEAL
		
	elif NewValueOfDice == GATTLING:# Gattling
		Dice.texture = GATTLING_IMG
		global.dice_val_general = GATTLING
		
	elif NewValueOfDice == ARROW:# Arrow
		Dice.texture = ARROW_IMG
		global.dice_val_general = ARROW
		
	elif NewValueOfDice == BOMB:# DYNAMITE
		Dice.texture = BOMB_IMG
		global.dice_val_general = BOMB

func init_buttons():
	button1 = Button.new()
	button1.set_position(Vector2(496,247))
	button1.set_size(Vector2(52,34))
	button1.connect(\"pressed\",self,\"on_dice_click_event\",[Dice1])
	self.add_child(button1)
	
	button2 = Button.new()
	button2.set_position(Vector2(565,247))
	button2.set_size(Vector2(52,34))
	button2.connect(\"pressed\",self,\"on_dice_click_event\",[Dice2])
	self.add_child(button2)	
	
	button3 = Button.new()
	button3.set_position(Vector2(634,247))
	button3.set_size(Vector2(52,34))
	button3.connect(\"pressed\",self,\"on_dice_click_event\",[Dice3])
	self.add_child(button3)	
	
	button4 = Button.new()
	button4.set_position(Vector2(703,247))
	button4.set_size(Vector2(52,34))
	button4.connect(\"pressed\",self,\"on_dice_click_event\",[Dice4])
	self.add_child(button4)	
	
	button5 = Button.new()
	button5.set_position(Vector2(772,247))
	button5.set_size(Vector2(52,34))
	button5.connect(\"pressed\",self,\"on_dice_click_event\",[Dice5])
	self.add_child(button5)

var msg_of_server
func _ready():
	global.current_player = 0
	msg_of_server=\"\"
	init_RollDicebutton_and_EndTurnButton()
	RollDiceButton = self.get_child(2)
	EndTurnButton = self.get_child(3)
	RollTimer = Timer.new()
	self.add_child(RollTimer)
	
	Information_Label = Label.new()
	Information_Label.text = \"3 THROWS LEFT\"
	Information_Label.set_position(Vector2(600,356))
	self.add_child(Information_Label)
	
	print_label()
	init_buttons()
	hide_buttons()

# Called every frame. 'delta' is the elapsed time since the previous frame.
# warning-ignore:unused_argument
func _process(delta):
	if RollingBool == true: # the Dices are rolling
		if nbr_throws > 1:
			if Dice1Clicked == true:
				change_img(Dice1)
				global.dice1_val = global.dice_val_general
				
			if Dice2Clicked == true:
				change_img(Dice2)
				global.dice2_val = global.dice_val_general
				
			if Dice3Clicked == true:
				change_img(Dice3)
				global.dice3_val = global.dice_val_general
				
			if Dice4Clicked == true:
				change_img(Dice4)
				global.dice4_val = global.dice_val_general
				
			if Dice5Clicked == true:
				change_img(Dice5)
				global.dice5_val = global.dice_val_general
		else:
			change_img(Dice1)
			global.dice1_val = global.dice_val_general
			change_img(Dice2)
			global.dice2_val = global.dice_val_general
			change_img(Dice3)
			global.dice3_val = global.dice_val_general
			change_img(Dice4)
			global.dice4_val = global.dice_val_general
			change_img(Dice5)
			global.dice5_val = global.dice_val_general
	pass
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 31.3389, 19.8229 )

[node name="RollDice" type="Node2D"]
script = SubResource( 1 )

[node name="HSplitContainer" type="HSplitContainer" parent="."]
margin_left = 392.0
margin_top = 258.0
margin_right = 874.0
margin_bottom = 322.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Area2D" type="Area2D" parent="HSplitContainer"]
visible = false
position = Vector2( 114.5, 0 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="HSplitContainer/Area2D"]
position = Vector2( 65, 32 )
scale = Vector2( 0.15, 0.15 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="HSplitContainer/Area2D"]
position = Vector2( 62, 33 )
scale = Vector2( 1.5, 1.5 )
shape = SubResource( 2 )

[node name="Area2D2" type="Area2D" parent="HSplitContainer"]
visible = false
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="HSplitContainer/Area2D2"]
position = Vector2( 65, 32 )
scale = Vector2( 0.15, 0.15 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="HSplitContainer/Area2D2"]
position = Vector2( 60, 37 )
scale = Vector2( 1.5, 1.5 )
shape = SubResource( 2 )
